[4mRunning "serve" task[24m

[4mRunning "clean:server" (clean) task[24m

[4mRunning "env:all" (env) task[24m

[4mRunning "concurrent:server" (concurrent) task[24m

[4mRunning "injector:scripts" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mjs[39m files [90m(34 files)[39m
[32m>> [39mNothing changed

[4mRunning "injector:css" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mcss[39m files [90m(11 files)[39m
[32m>> [39mNothing changed

[4mRunning "wiredep:target" (wiredep) task[24m

[4mRunning "autoprefixer:dist" (autoprefixer) task[24m

[4mRunning "express:dev" (express) task[24m
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "open:server" (open) task[24m

[4mRunning "watch" task[24m
Waiting...
[90mGET /assets/images/keys.png [33m404 [90m34ms[0m
[90mGET /%7B%7Bshowcase.mediumImage%7D%7D [32m200 [90m4ms[0m
[90mPOST /api/amazonproducts/suggest/ [32m200 [90m7ms[0m
[90mGET /auth/amazon/publicClientAuth [32m200 [90m3ms - 61b[0m
THIS SHOUDL BE the TOKEN 
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 19 21 60 be 89 e0 6f a0 9a c5 ca 41 81 fa 9a e5 0b 5a 5e 3b c1 55 05 70 d1 ff a2 df 74 d9 55 66 00 00 9c 00 00 1f ff 01 ...>,
        offset: 1662236,
        remaining: 8823524 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 11400,
        _bytesDispatched: 867546,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425531637959,
        _monotonicStartTime: 33753787,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 19 21 60 be 89 e0 6f a0 9a c5 ca 41 81 fa 9a e5 0b 5a 5e 3b c1 55 05 70 d1 ff a2 df 74 d9 55 66 00 00 9c 00 00 1f ff 01 ...>,
        offset: 1662236,
        remaining: 8823524 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 11400,
        _bytesDispatched: 867546,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425531637959,
        _monotonicStartTime: 33753787,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'conte nt-length': '153',
     accept 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3ApBtMmj9tF30EE72dwBUiC3Ut.MRo6D1x4zq8rzCEcUHC2qyyb1fK%2Bew6EV1KdFlxCI%2FU; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAhWTVNygz9eOrvlpbjbFSh-_rJ1wCFHUtGi-3qIfjxnffRBPv1qCTf5bEjKXiH4MyQCl6DaxOYFEezZJjzp1QAM3OVphvxZrSJeHjVZFGdoFpCAQHmCxiMbSTP05WwN9oueejaTc_QqrCWx4rt9rZvw_URBQRO2KftfYvc4Q6uzNe-2MGCV_wGcZU2cdhryfPYacIQKp3SihZbGNpMonkamKrKQ3mfmgQvqdbJ2x1GjuM70pgVj2e-bRLEYSMtlJ1zP2C-hqwZ297281eLzsk5l_gJuN-D4_LeII9cf-MpnqRBXXwOUATuQ10_ccOKCPpZ5MYLlEG4-bwrHO0REn9ZsED9tPBW2n6u1A-z8Zh8qZWtGS8NZK1ML4kgw%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425534978545%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 19 21 60 be 89 e0 6f a0 9a c5 ca 41 81 fa 9a e5 0b 5a 5e 3b c1 55 05 70 d1 ff a2 df 74 d9 55 66 00 00 9c 00 00 1f ff 01 ...>,
        offset: 1662236,
        remaining: 8823524 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 11400,
        _bytesDispatched: 867546,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425531637959,
        _monotonicStartTime: 33753787,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:pBtMmj9tF30EE72dwBUiC3Ut.MRo6D1x4zq8rzCEcUHC2qyyb1fK+ew6EV1KdFlxCI/U',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAhWTVNygz9eOrvlpbjbFSh-_rJ1wCFHUtGi-3qIfjxnffRBPv1qCTf5bEjKXiH4MyQCl6DaxOYFEezZJjzp1QAM3OVphvxZrSJeHjVZFGdoFpCAQHmCxiMbSTP05WwN9oueejaTc_QqrCWx4rt9rZvw_URBQRO2KftfYvc4Q6uzNe-2MGCV_wGcZU2cdhryfPYacIQKp3SihZbGNpMonkamKrKQ3mfmgQvqdbJ2x1GjuM70pgVj2e-bRLEYSMtlJ1zP2C-hqwZ297281eLzsk5l_gJuN-D4_LeII9cf-MpnqRBXXwOUATuQ10_ccOKCPpZ5MYLlEG4-bwrHO0REn9ZsED9tPBW2n6u1A-z8Zh8qZWtGS8NZK1ML4kgw","max_age":3300,"expiration_date":1425534978545,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425531628789,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: 'pBtMmj9tF30EE72dwBUiC3Ut',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Wed Mar 04 2015 21:01:19 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[4mRunning "serve" task[24m

[4mRunning "clean:server" (clean) task[24m

[4mRunning "env:all" (env) task[24m

[4mRunning "concurrent:server" (concurrent) task[24m

[4mRunning "injector:scripts" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mjs[39m files [90m(34 files)[39m
[32m>> [39mNothing changed

[4mRunning "injector:css" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mcss[39m files [90m(11 files)[39m
[32m>> [39mNothing changed

[4mRunning "wiredep:target" (wiredep) task[24m

[4mRunning "autoprefixer:dist" (autoprefixer) task[24m

[4mRunning "express:dev" (express) task[24m
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
Express server listening on 4430, in development mode
finished populating users
Done waiting!

[4mRunning "open:server" (open) task[24m

[4mRunning "watch" task[24m
Waiting...
[90mGET /assets/images/keys.png [33m404 [90m31ms[0m
[90mGET /%7B%7Bshowcase.mediumImage%7D%7D [32m200 [90m13ms[0m
[90mPOST /api/amazonproducts/suggest/ [32m200 [90m6ms[0m
[90mGET /auth/amazon/publicClientAuth [32m200 [90m1ms - 61b[0m
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
undefined
[90mPOST /auth/amazon/login [33m404 [90m10ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
undefined
[90mPOST /auth/amazon/login [33m404 [90m5ms - 53b[0m
err at 20 [Error: Invalid password]
this is the cookie { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
  amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' }
in auth.service validating Jwt
[90mPOST /api/amazoncarts/get [33m401 [90m2ms - 52b[0m
[32m>> [39mFile "server/auth/auth.service.js" changed.

[4mRunning "express:dev" (express) task[24m
[31mStopping[39m Express server
[36mStarting [39mbackground Express server


Execution Time (2015-03-05 23:32:08 UTC)
wait               1.5s  ▇ 1%
watch          1m 54.8s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 96%
express:dev        1.7s  ▇ 1%
Total 2m 0.2s

[31mStopping[39m Express server
[4mRunning "serve" task[24m

[4mRunning "clean:server" (clean) task[24m

[4mRunning "env:all" (env) task[24m

[4mRunning "concurrent:server" (concurrent) task[24m

[4mRunning "injector:scripts" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mjs[39m files [90m(34 files)[39m
[32m>> [39mNothing changed

[4mRunning "injector:css" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mcss[39m files [90m(11 files)[39m
[32m>> [39mNothing changed

[4mRunning "wiredep:target" (wiredep) task[24m

[4mRunning "autoprefixer:dist" (autoprefixer) task[24m

[4mRunning "express:dev" (express) task[24m
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "open:server" (open) task[24m

[4mRunning "watch" task[24m
Waiting...
[90mGET /assets/images/keys.png [33m404 [90m33ms[0m
[90mGET /%7B%7Bshowcase.mediumImage%7D%7D [32m200 [90m13ms[0m
[90mPOST /api/amazonproducts/suggest/ [32m200 [90m2ms[0m
[90mGET /auth/amazon/publicClientAuth [32m200 [90m2ms - 61b[0m
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROP undefined
[90mPOST /auth/amazon/login [33m404 [90m9ms - 53b[0m
err at 20 [Error: Invalid password]
[32m>> [39mFile "server/auth/auth.service.js" changed.

[4mRunning "express:dev" (express) task[24m
[31mStopping[39m Express server
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "docco_husky:Sphereable" (docco_husky) task[24m
[33mWarning: Cannot read property 'src' of undefined[39m

[4mRunning "watch" task[24m
Waiting...


Execution Time (2015-03-05 23:34:11 UTC)
express:dev           2s  ▇ 2%
wait                1.5s  ▇ 1%
watch           1m 33.2s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 91%
express:dev         1.5s  ▇ 1%
wait                1.5s  ▇ 1%
Total 1m 42.3s

[31mStopping[39m Express server
[4mRunning "serve" task[24m

[4mRunning "clean:server" (clean) task[24m

[4mRunning "env:all" (env) task[24m

[4mRunning "concurrent:server" (concurrent) task[24m

[4mRunning "injector:scripts" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mjs[39m files [90m(34 files)[39m
[32m>> [39mNothing changed

[4mRunning "injector:css" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mcss[39m files [90m(11 files)[39m
[32m>> [39mNothing changed

[4mRunning "wiredep:target" (wiredep) task[24m

[4mRunning "autoprefixer:dist" (autoprefixer) task[24m

[4mRunning "express:dev" (express) task[24m
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
Express server listening on 4430, in development mode
finished populating users
Done waiting!

[4mRunning "open:server" (open) task[24m

[4mRunning "watch" task[24m
Waiting...
[90mGET /assets/images/keys.png [33m404 [90m22ms[0m
[90mGET /%7B%7Bshowcase.mediumImage%7D%7D [32m200 [90m12ms[0m
[90mPOST /api/amazonproducts/suggest/ [32m200 [90m2ms[0m
[90mGET /auth/amazon/publicClientAuth [32m200 [90m2ms - 61b[0m
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2046032,
        remaining: 8439728 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 21940,
        _bytesDispatched: 303976,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2046032,
        remaining: 8439728 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 21940,
        _bytesDispatched: 303976,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2046032,
        remaining: 8439728 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 21940,
        _bytesDispatched: 303976,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:05 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m47ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2047716,
        remaining: 8438044 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 23415,
        _bytesDispatched: 304243,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2047716,
        remaining: 8438044 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 23415,
        _bytesDispatched: 304243,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2047716,
        remaining: 8438044 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 23415,
        _bytesDispatched: 304243,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:05 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m23ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2049400,
        remaining: 8436360 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24890,
        _bytesDispatched: 304510,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2049400,
        remaining: 8436360 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24890,
        _bytesDispatched: 304510,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2049400,
        remaining: 8436360 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24890,
        _bytesDispatched: 304510,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:06 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m31ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2051084,
        remaining: 8434676 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 26365,
        _bytesDispatched: 304777,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2051084,
        remaining: 8434676 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 26365,
        _bytesDispatched: 304777,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2051084,
        remaining: 8434676 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 26365,
        _bytesDispatched: 304777,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:07 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m24ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2052768,
        remaining: 8432992 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 27840,
        _bytesDispatched: 305044,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2052768,
        remaining: 8432992 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 27840,
        _bytesDispatched: 305044,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2052768,
        remaining: 8432992 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 27840,
        _bytesDispatched: 305044,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:07 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m27ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2054452,
        remaining: 8431308 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 29315,
        _bytesDispatched: 305311,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2054452,
        remaining: 8431308 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 29315,
        _bytesDispatched: 305311,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2054452,
        remaining: 8431308 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 29315,
        _bytesDispatched: 305311,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:09 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m35ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2056136,
        remaining: 8429624 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 30790,
        _bytesDispatched: 305578,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2056136,
        remaining: 8429624 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 30790,
        _bytesDispatched: 305578,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2056136,
        remaining: 8429624 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 30790,
        _bytesDispatched: 305578,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:09 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m14ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2057820,
        remaining: 8427940 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 32265,
        _bytesDispatched: 305845,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2057820,
        remaining: 8427940 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 32265,
        _bytesDispatched: 305845,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2057820,
        remaining: 8427940 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 32265,
        _bytesDispatched: 305845,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:09 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m27ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2059504,
        remaining: 8426256 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 33740,
        _bytesDispatched: 306112,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2059504,
        remaining: 8426256 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 33740,
        _bytesDispatched: 306112,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2059504,
        remaining: 8426256 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 33740,
        _bytesDispatched: 306112,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:10 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m17ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2061188,
        remaining: 8424572 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 35215,
        _bytesDispatched: 306379,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2061188,
        remaining: 8424572 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 35215,
        _bytesDispatched: 306379,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2061188,
        remaining: 8424572 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 35215,
        _bytesDispatched: 306379,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:10 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m22ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2062872,
        remaining: 8422888 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 36690,
        _bytesDispatched: 306646,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2062872,
        remaining: 8422888 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 36690,
        _bytesDispatched: 306646,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2062872,
        remaining: 8422888 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 36690,
        _bytesDispatched: 306646,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:10 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m20ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2064556,
        remaining: 8421204 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 38165,
        _bytesDispatched: 306913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2064556,
        remaining: 8421204 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 38165,
        _bytesDispatched: 306913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2064556,
        remaining: 8421204 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 38165,
        _bytesDispatched: 306913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:11 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m18ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2066240,
        remaining: 8419520 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 22982,
        _bytesDispatched: 162273,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2066240,
        remaining: 8419520 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 22982,
        _bytesDispatched: 162273,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2066240,
        remaining: 8419520 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 22982,
        _bytesDispatched: 162273,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:11 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m19ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2067924,
        remaining: 8417836 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24457,
        _bytesDispatched: 162540,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2067924,
        remaining: 8417836 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24457,
        _bytesDispatched: 162540,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2067924,
        remaining: 8417836 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 24457,
        _bytesDispatched: 162540,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:11 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m15ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2069608,
        remaining: 8416152 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 39640,
        _bytesDispatched: 307180,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2069608,
        remaining: 8416152 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 39640,
        _bytesDispatched: 307180,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2069608,
        remaining: 8416152 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 39640,
        _bytesDispatched: 307180,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:11 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m15ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2071292,
        remaining: 8414468 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 41115,
        _bytesDispatched: 307447,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2071292,
        remaining: 8414468 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 41115,
        _bytesDispatched: 307447,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2071292,
        remaining: 8414468 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 41115,
        _bytesDispatched: 307447,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:12 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m17ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2072976,
        remaining: 8412784 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 42590,
        _bytesDispatched: 307714,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2072976,
        remaining: 8412784 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 42590,
        _bytesDispatched: 307714,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2072976,
        remaining: 8412784 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 42590,
        _bytesDispatched: 307714,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:12 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m54ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2074660,
        remaining: 8411100 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 44065,
        _bytesDispatched: 307981,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2074660,
        remaining: 8411100 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 44065,
        _bytesDispatched: 307981,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2074660,
        remaining: 8411100 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 44065,
        _bytesDispatched: 307981,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:13 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m22ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2076344,
        remaining: 8409416 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 45540,
        _bytesDispatched: 308248,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2076344,
        remaining: 8409416 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 45540,
        _bytesDispatched: 308248,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2076344,
        remaining: 8409416 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 45540,
        _bytesDispatched: 308248,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562513,
        _monotonicStartTime: 11938473,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:13 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m24ms - 53b[0m
err at 20 [Error: Invalid password]
only bodu { profileData: 
   { success: true,
     profile: 
      { Name: 'Anatoliy Liberman',
        CustomerId: 'amzn1.account.AEVIUB6356K4KTPZ6HM5A7HZU4ZA',
        PrimaryEmail: 'toleliberman@gmail.com' } } }
THIS SHOUDL BE the TOKEN Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q
this is the REQ.USER PROPPPPPPPPPPPPP { _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { close: [ [Function] ], readable: [Function] },
  _maxListeners: 10,
  socket: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2078028,
        remaining: 8407732 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 25932,
        _bytesDispatched: 162807,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  connection: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2078028,
        remaining: 8407732 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 25932,
        _bytesDispatched: 162807,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:4430',
     connection: 'keep-alive',
     'content-length': '169',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/plain, */*',
     origin: 'https://localhost:4430',
     'x-firephp-version': '0.0.6',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36',
     'content-type': 'application/json;charset=UTF-8',
     referer: 'https://localhost:4430/login',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'connect.sid=s%3A6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8; amazon_Login_state_cache=%7B%22access_token%22%3A%22Atza%7CIQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q%22%2C%22max_age%22%3A3300%2C%22expiration_date%22%3A1425600410700%2C%22client_id%22%3A%22amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132%22%2C%22scope%22%3A%22profile%22%7D' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/login',
  method: 'POST',
  statusCode: null,
  client: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Object],
        sslOutEnd: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     pair: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        server: [Object],
        _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        _destroying: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: [Object],
        servername: 'localhost',
        npnProtocol: 'http/1.1',
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _resumingSession: false },
     _pending: null,
     _pendingEncoding: '',
     _pendingCallback: null,
     _doneFlag: false,
     _retryAfterPartial: false,
     _halfRead: false,
     _sslOutCb: null,
     _resumingSession: false,
     _reading: true,
     _destroyed: false,
     _ended: false,
     _finished: false,
     _opposite: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     _buffer: 
      { isFull: false,
        pool: <Buffer 16 03 03 00 4b 02 00 00 47 03 03 03 bb e7 6d 7c 4f 1b 63 d4 4a a2 4f 66 2a cc d3 bf 69 ff fb e1 61 cc 5f d1 19 9e d3 67 85 50 cb 00 00 9c 00 00 1f ff 01 ...>,
        offset: 2078028,
        remaining: 8407732 },
     _handle: { readStop: [Function], readStart: [Function] },
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        bytesRead: 25932,
        _bytesDispatched: 162807,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 1425598562490,
        _monotonicStartTime: 11938450,
        read: [Function],
        _consuming: true,
        _peername: [Object] },
     encrypted: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Circular],
        _buffer: [Object] },
     authorized: false,
     _controlReleased: true,
     npnProtocol: 'http/1.1',
     servername: 'localhost',
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: {},
        flush: [Function: noop],
        write: [Function],
        end: [Function],
        on: [Function],
        writeHead: [Function],
        _livereload: true } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/auth/amazon/login',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login' },
  params: {},
  query: {},
  res: 
   { domain: null,
     _events: { finish: [Object], close: [Function: logRequest] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     connection: 
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        pair: [Object],
        _pending: null,
        _pendingEncoding: '',
        _pendingCallback: null,
        _doneFlag: false,
        _retryAfterPartial: false,
        _halfRead: false,
        _sslOutCb: null,
        _resumingSession: false,
        _reading: true,
        _destroyed: false,
        _ended: false,
        _finished: false,
        _opposite: [Object],
        _buffer: [Object],
        _handle: [Object],
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: 'http/1.1',
        servername: 'localhost',
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _paused: false,
        _httpMessage: [Circular] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: {},
     flush: [Function: noop],
     write: [Function],
     end: [Function],
     on: [Function],
     writeHead: [Function],
     _livereload: true },
  next: [Function: next],
  route: { path: '/login', stack: [ [Object] ], methods: { post: true } },
  body: { profileData: { success: true, profile: [Object] } },
  _body: true,
  pipe: [Function],
  addListener: [Function: addListener],
  on: [Function: addListener],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: undefined,
  cookies: 
   { 'connect.sid': 's:6NICupRR2QcBLB8TshZi08js.umg227x2InJqM33EVcvNJAkGqFIGfMPktcZ13GaLeQ8',
     amazon_Login_state_cache: '{"access_token":"Atza|IQEBLzAtAhUAg74jhOoBQlFzocEANP5x_aU5_v0CFDOQ8ANaF36ZSFj78vh8gMOMKz8m3EC1yPYEj_4bAyrYI3KMBEVTYOOrhsecFNKMwzF3bOyP5BanuJEYSFbCp1IFB5RoQ_gcq3ZjF4GY7MbVyQ8inqKr6Q8ticoxue_2iEMBIfy2l1PM9EUgkarprqlIoPDGQl7x91LUpk397l_8oacGXXFor0lhgMRJEc7L8DCmNo7XXAWA5vHxukgpCbJUXq8duF071fCS40uWa7_AbsNR-_FbRsPOEigYMy6qTYB3szNhigrp3R53Dy2-z5VhAeQ0LJISwJUcpXo1QoFCgjMDn3Bs1v4Xz85NPAcdBlVZPgUnkCx_vhg_AhINFsMegPeN_Q","max_age":3300,"expiration_date":1425600410700,"client_id":"amzn1.application-oa2-client.ea660f07d2c147cb8f367b0aaea54132","scope":"profile"}' },
  signedCookies: {},
  _passport: 
   { instance: 
      { _key: 'passport',
        _strategies: [Object],
        _serializers: [],
        _deserializers: [],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: {} },
  sessionStore: 
   { db: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'thesis-dev',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        slaveOk: false,
        bufferMaxEntries: -1,
        native_parser: undefined,
        bsonLib: [Object],
        bson: [Object],
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        openCalled: true,
        commands: [],
        logger: [Object],
        tag: 1425598556983,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     _open_database: [Function],
     defaultExpirationTime: 1209600000,
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection: 
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        pkFactory: [Object],
        serverCapabilities: undefined } },
  sessionID: '6NICupRR2QcBLB8TshZi08js',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _startTime: Thu Mar 05 2015 15:37:13 GMT-0800 (PST),
  _remoteAddress: '127.0.0.1' }
[90mPOST /auth/amazon/login [33m404 [90m19ms - 53b[0m
err at 20 [Error: Invalid password]
[32m>> [39mFile "server/auth/auth.service.js" changed.

[4mRunning "express:dev" (express) task[24m
[31mStopping[39m Express server
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "docco_husky:Sphereable" (docco_husky) task[24m
[33mWarning: Cannot read property 'src' of undefined[39m

[4mRunning "watch" task[24m
Waiting...
[32m>> [39mFile "server/auth/auth.service.js" changed.

[4mRunning "express:dev" (express) task[24m
[31mStopping[39m Express server
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "docco_husky:Sphereable" (docco_husky) task[24m
[33mWarning: Cannot read property 'src' of undefined[39m

[4mRunning "watch" task[24m
Waiting...
[32m>> [39mFile "server/auth/auth.service.js" changed.

[4mRunning "express:dev" (express) task[24m
[31mStopping[39m Express server
[36mStarting [39mbackground Express server
Express server listening on 4430, in development mode
Express server listening on 4430, in development mode

[4mRunning "wait" task[24m
[32m>> [39mWaiting for server reload...
finished populating users
Done waiting!

[4mRunning "docco_husky:Sphereable" (docco_husky) task[24m
[33mWarning: Cannot read property 'src' of undefined[39m

[4mRunning "watch" task[24m
Waiting...


Execution Time (2015-03-05 23:35:55 UTC)
watch           4m 13.1s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 92%
watch               3.2s  ▇ 1%
watch               4.1s  ▇ 1%
Total 4m 36.1s

[31mStopping[39m Express server
[4mRunning "serve" task[24m

[4mRunning "clean:server" (clean) task[24m

[4mRunning "env:all" (env) task[24m

[4mRunning "concurrent:server" (concurrent) task[24m

[4mRunning "injector:scripts" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mjs[39m files [90m(34 files)[39m
[32m>> [39mNothing changed

[4mRunning "injector:css" (injector) task[24m
[90mMissing option `template`, using `dest` as template instead[39m
Injecting [32mcss[39m files [90m(11 files)[39m
[32m>> [39mNothing changed

[4mRunning "wiredep:target" (wiredep) task[24m

[4mRunning "autoprefixer:dist" (autoprefixer) task[24m

[4mRunning "express:dev" (express) task[24m
[36mStarting [39mbackground Express server


Execution Time (2015-03-05 23:40:32 UTC)
loading tasks      366ms  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 35%
serve               11ms  ▇ 1%
clean:server        33ms  ▇▇ 3%
env:all             16ms  ▇ 2%
concurrent:server   11ms  ▇ 1%
injector:scripts    87ms  ▇▇▇▇ 8%
injector:css        38ms  ▇▇ 4%
wiredep:target     303ms  ▇▇▇▇▇▇▇▇▇▇▇▇▇ 29%
autoprefixer:dist   49ms  ▇▇▇ 5%
express:dev        133ms  ▇▇▇▇▇▇ 13%
Total 1.1s

[31mStopping[39m Express server
